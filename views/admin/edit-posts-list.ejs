<html lang="en">
<%- include('../partials/header.ejs') %>
<body>
    <%- include('../partials/nav-bar.ejs') %>

    <h2>Edit Posts</h2>

    <div class="class_editPostsListContent">

        <!-- Adding some JavaScript to this HTML template -->
        <!-- This is expecting an array of posts b/c it is cycling through all of the posts sent to it. -->
        <% if (posts.length > 0) { %>
            <!-- Iterate through the posts and generate HTML for each one -->
            <% posts.forEach(post => { %>
                <!-- The anchor tag below is hyperlinking each post on the homepage to a page that shows only that post. The post._id part is assigning a unique ID to each of the hyperlinks so that they lead to a different page for each post. -->
                <p class="class_singlePost">
                    <!-- TODO: List the date each post was posted next to the post. Need to figure out how to formate the Date object (see post.js). -->
                    <a href="/posts/<%= post._id %>"><%= post.title %></a>
                    <a class="class_edit" href="/admin/edit/<%= post.id %>">Edit Post</a>
                    <a name="name_btn_delete" class="class_btn_delete" data-doc="<%= post._id %>">Delete</a>
                </p>

            <% }) %>
        <% } else { %>
            <p>There are no posts to display.</p>
        <% } %>
    </div>

    <%- include('../partials/footer.ejs') %>

    <script>
        const postsDiv = document.querySelector('div.class_editPostsListContent');

        postsDiv.addEventListener('click', (e) => {

            if (e.target.name === 'name_btn_delete') {
                const endpoint = `/admin/${e.target.dataset.doc}`; // This is getting the id from the data-doc=... object above.
                fetch(endpoint, {
                    method: 'DELETE', // This is specifying the request type (POST, GET, DELETE, etc.)
                })
                .then(response => response.json()) // response is the json data that is sent from the server to th browser. This file, details.ejs, lives on the frontend. response.json() returns an object that is then parsed into usable JavaScript object.
                .then(data => window.location.href = data.redirect) // This logs the data, JavaScript, that came through the response.json() statement above.
                .catch(err => console.log(err));
            }
        });
    </script>

</body>
</html>